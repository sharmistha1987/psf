
# coding: utf-8

# In[2]:


str = 'hello world'


# In[4]:


print(str[-1])


# In[10]:


str[-1::-1]


# In[11]:


print(str)


# In[69]:


def odd_pos(mylist):
   odd_n=list(v for x,v in enumerate(mylist)if x%2 != 0)
   return odd_n


# In[71]:


odd_pos([1,2,3,4,5,6])


# In[68]:


import numpy as np
a=[4,6,12]
print(list(np.cumsum(a)))


# In[74]:


from itertools import accumulate
mylist =[4,6,12]
def func1():
    return list(accumulate(mylist))


# In[75]:


func1()


# In[14]:


def func1(mylist):
    total=0
    for i in mylist:
        total+=i
    return total


# In[15]:


func1([4,6,12])


# In[20]:


def func1_1(mylist_1):
    total1=0
    for i in list(mylist_1):
        total1+=i
        yield total1
    


# In[21]:


func1_1([4,6,12])


# In[ ]:


print ( "Enter an integer: ") 
answer = input ()


# In[91]:


del str



# In[133]:


def func2(str_val):
 return list(str_val)


# In[134]:


func2('sam')


# In[22]:


def func3(n=456):
 digits = list(int(i) for i in str(n))
 return digits


# In[23]:


func3()


# In[24]:


def avg_num(list1):
    n_len=len(list1)
    total=0
    for x in list1:
        total+=x
    avg=total/n_len
    return avg


# In[25]:


avg_num([1,2,3,4])


# In[27]:


import numpy as np
x=np.mean([1,2,3,4])
print (x)


# In[35]:


def med_num(list1):
   n_list=len(list1)
   quotient=n_list//2
   if n_list<1:
        return None
   if n_list%2==1:  #odd number length
        return sorted(list1)[quotient]
   else: #even number length
        return sum(sorted(list1)[quotient-1:quotient+1])/2
        


# In[39]:


med_num([1,2,3,4])


# In[55]:


def func_list(list1=[1,2,3,4]):
    for i in range(len(list1)):
     print(list1[i])



# In[56]:


func_list()


# In[60]:


def func_list1(list1=[1,2,3,4]):
    for i in list1:
     print(i)


# In[61]:


func_list1()


# In[81]:


def string_word_reverse(str_arg):
    str_split=str_arg.split() #--['hello','world!']
    str_rev=str_split[-1::-1]  #--['world!','hello']
    #str_rev=str_split[::-1]
    #str_rev=reversed(str_split)
    final_str=' '.join(str_rev) #--'world! hello'
    #print(final_str) #-- world! hello
    return final_str  #-- 'world! hello'
    


# In[82]:


string_word_reverse('hello world!')


# In[27]:


def fibo (n):
    a=0
    b=1
    count=0
    while count<n:
     print(a)
     x=a+b
     a=b
     b=x
     count=count+1


# Factorial

# In[ ]:


def fact(n):
    if (n==0):
        return 1
    else:
        return n*fact(n-1)


# In[52]:


t=[(0,15),(2,15)]


# In[45]:


t[0]


# In[83]:


a=list(t[0])
print(a)
b=list(t[1])
print(b)
a.extend(b)
c=set(a)
c

dict_sam={'a':1,'b':2,'c':3}
x=list(dict_sam)
print(x)

list(dict_sam.keys())

dictionary=dict((k,v) for k,v in zip([1,2,3],['a','b','c']))


s = 'arunununghhjj'
sb = 'nun'
results = 0
sub_len = len(sb)
for i in range(len(s)):
    if s[i:i+sub_len] == sb:
        results += 1
print(results)


s = 'arunununghhjj'
sb = 'nun'
sub_len = len(sb)
pos_list=[]
for i in range(len(s)):
    if s[i:i+sub_len] == sb:
        pos=i
        pos_list.append(i)
print(pos_list)

