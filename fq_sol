
# In[2]:


mylist=[1,2,3,5,7]
max_num=mylist[0]
for i in mylist:
    if i>max_num:
        max_num=i
print(max_num)


# In[28]:


from collections import Counter
text='My name is sam . My company is SF insu. My name is sam'
words=text.split()
word_count=Counter(words) # counter returns dictionary with key = each word and value =no of times that word occured in list
word_count_list=[]
for i in word_count.most_common(4): #most_common(k) will return tuple(word,count) where k number of words mostly appear
    word_count_list.append(i)
print(word_count_list)




# In[30]:


num_pat_list=[]
for i in range(10):
    num_pat_list.append(i)
    print(num_pat_list)


# In[37]:


num_pat=''
for i in range(1,10):
    num_pat+=str(i)
    print(num_pat)


# In[45]:


character='**********'
char_pat=''
for i in character:
    char_pat+=i
    print(char_pat)


# In[43]:


def char_pat(character,n):
    for i in range(1,n+1):
        print(character*i)

char_pat('*',10)


# In[7]:


arr_m=[1, 2, 90, 10, 110] 
min_diff=arr_m[1]-arr_m[0]
for i in range(len(arr_m)-1):
    if arr_m[i+1]-arr_m[i] < min_diff:   
        min_diff=abs(arr_m[i+1]-arr_m[i])   # abs minimum difference between two consecutive elements in a list
print(min_diff)
    


# In[2]:


arr=[1, 2, 90, 10, 110] 
max_diff1=arr[1]-arr[0]
for i in range(len(arr)-1):
    if arr[i+1]-arr[i] > max_diff1:   
        max_diff1=abs(arr[i+1]-arr[i])   # abs maximum difference between two consecutive elements in a list
print(max_diff1)


# In[3]:


def maxDiff(arr):
    
    max_diff = arr[1] - arr[0] 
      
    for i in range(len(arr)): 
        for j in range(i+1, len(arr)): 
            if(arr[j] - arr[i] > max_diff):  
                max_diff = arr[j] - arr[i]  # max diference between any two elements in a list
      
    return max_diff 
      
arr1 = [1, 2, 90, 10, 110]
print ("Maximum difference is", maxDiff(arr1)) 


# In[4]:


def minDiff(arr):
    
    min_diff1 = arr[1] - arr[0] 
      
    for i in range(len(arr)): 
        for j in range(i+1, len(arr)): 
            if(arr[j] - arr[i] < min_diff1):  
                min_diff1 = arr[j] - arr[i]  # min diference between any two elements in a list
      
    return min_diff1

arr2 = [1, 2, 90, 10, 110]
print ("Minimum difference is", minDiff(arr2))


# In[25]:


tup_mint=[(0,15),(10,25)]
mint_list=[]
for m in tup_mint:
    for e in m:
        mint_list.append(e)  # convert list of tuples to list
        
max_mint=mint_list[1]-mint_list[0]
for i in range(len(mint_list)):
    for j in range(i+1,len(mint_list)):
        if mint_list[j]-mint_list[i]>max_mint:
            max_mint=mint_list[j]-mint_list[i] # get max diff between minutes watched
print(max_mint) 


# In[32]:


text_1='Hello World me Hello World Sam Hello World us'
text_1.count('Hello World')


# In[42]:


text_1='Hello World me Hello World Sam Hello World us'
text_srch='Hello'
count=0
for i in text_1.split():
    if i==text_srch:
        count+=1
print(count)
    


# In[50]:


text_1='Hello World!Hello World!Hello World!'
a=text_1.split('!')
count=0
for i in range(len(a)):
    if a[i]=='Hello World':
        count+=1
print(count)

    


# In[51]:


list('Hello world') # splits individual char of text_1 as elements of list


# In[64]:


sentence = "Hi my name is Bob"
total=0
words = sentence.split()
for word in words:
    total+=len(word)
avg_len_sentence=total/len(words)
print(avg_len_sentence)


# In[97]:


ip='12.4.45.87'
invalid=False
ip_list=ip.split('.')
str_num=''.join(ip_list)
if str_num.isdigit()==False:
    invalid=True
else:    
    for i in ip_list:
        if int(i)<0 or int(i)>255:
            invalid=True
            break
            
if(invalid ==False):
    print('Valid ip')
else:
    print('Invalid ip')
    
    
def recurs_pattern(s,p):
    if len(s)<len(p):
        return False
    else:
        if s[0]==p or s[0:2]==p:
            return True
        elif len(s[1:])>=len(p):
                return recurs_pattern(s[1:],p)
        else:
            return False
        
recurs_pattern('ximibi','mi')



text='I am am girl girl I am'
words=text.split()
newlist=[]
for word in words:
    if word not in newlist:
        newlist.append(word) # alternative to set() for removing duplicates
newlist



text='I am am girl girl I am'
words=text.split()
newlist=[]
for word in words:
    if word not in newlist:
        newlist.append(word) # alternative to set() for removing duplicates


text='I am am girl girl I am'
words_dict=dict() # create empty dictionary
words_list=text.split()
for word in words_list:
    if word not in words_dict:
        words_dict[word]=1  # intializing key and value for new word
    else:
        words_dict[word]+=1
print(words_dict)    
    
final_list=[]    
max_frequency=max(words_dict.values())
for k,v in words_dict.items():
    if v==max_frequency: # if words_dict[k]==max_frequency:
         x={k:v}
         final_list.append(x)
        
print(final_list)
          
final_list1=[]          
min_frequency=min(words_dict.values())
for k,v in words_dict.items():
    if v==min_frequency:  # if words_dict[k]==min_frequency:
         x={k:v}
         final_list1.append(x)

print(final_list1)
         
text='I am am girl girl I am'
words=text.split()
word_cnt=[words.count(word) for word in words]
dict_words=dict(zip(words,word_cnt))
print(dict_words) 

from collections import Counter
text='I am am girl girl I am'
words=text.split()
words_count=Counter(words) # returns dictionary with keys as words in text and values as there no of count in text
dict_words_freq=dict(words_count)
print(dict_words_freq)


string='fdlahkgfekk'
string_dict=dict() # create empty dictionary
first_occur_list=[]
for c in string:
    if c not in string_dict:
        string_dict[c]=1  # for new char intializing key(char) and value(count) in new dictionary
        first_occur_list.append(c) # set(string)
    else:
        string_dict[c]+=1

for i in first_occur_list:
    if string_dict[i]==1: # check for value in dictionary for element(as key) in list
        break
print(i)

list_elem=['ab','cgh','ab','dff','fdd']
words_dict=dict() # create empty dictionary

first_occur_list=[]
for word in list_elem:
    if word not in words_dict:
        words_dict[word]=1  # intializing key and value for new char
        first_occur_list.append(word) # set(list_elem)
    else:
        words_dict[word]+=1

for i in first_occur_list:
    if words_dict[i]==1: # check for value in dictionary for element(as key) in list
        break
print(i)

text='I am super girl girl girl I am'
words_dict=dict() # create empty dictionary
words_list=text.split()
unique_list=[]
for word in words_list:
    if word not in words_dict: #it will look in list of keys of words_dict not in list of values 
                               # if words.count(word)==1:
        words_dict[word]=1
        unique_list.append(word)  # appending single occurence of word
    else:
        words_dict[word]+=1
print(unique_list)


my_dict={1:'a',2:'b',3:'b',4:'a'}
unique_dict={}
for k,v in my_dict.items():
    if v not in unique_dict.values():
        unique_dict[k]=v
print(unique_dict)


def hcf(n1,n2):
    if n1<n2:
        smaller=n1
    else:
        smaller=n2
    i=1
    while i<=smaller:
        if(n1%i==0 and n2%i==0):
            hcf=i
        i+=1
    print(hcf)
    
hcf(24,108)






